<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | Trey Hunner]]></title>
  <link href="https://treyhunner.com/blog/categories/python/atom.xml" rel="self"/>
  <link href="https://treyhunner.com/"/>
  <updated>2024-05-09T07:35:04-07:00</updated>
  <id>https://treyhunner.com/</id>
  <author>
    <name><![CDATA[Trey Hunner]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The new REPL in Python 3.13]]></title>
    <link href="https://treyhunner.com/2024/05/my-favorite-python-3-dot-13-feature/"/>
    <updated>2024-05-08T13:30:00-07:00</updated>
    <id>https://treyhunner.com/2024/05/my-favorite-python-3-dot-13-feature</id>
    <content type="html"><![CDATA[<p>Python 3.13 just hit feature freeze with <a href="https://www.python.org/downloads/release/python-3130b1/">the first beta release today</a>.</p>

<p>Just before the feature freeze, a shiny new feature was added: <strong>a brand new Python REPL</strong>. ‚ú®</p>

<p>This new Python REPL is the feature I&rsquo;m most looking forward to using while teaching after 3.13.0 final is released later this year.
In terms of improving my quality of life while teaching Python, this new REPL may be my favorite feature since f-strings were added in Python 3.6.</p>

<p>I&rsquo;d like to share what&rsquo;s so great about this new REPL and what additional improvements I&rsquo;m hoping we might see in future Python releases.</p>

<p>None of these features will be ground breaking for folks who are already using <a href="https://github.com/ipython/ipython">IPython</a> day-to-day.
This new REPL really shines when you can&rsquo;t or shouldn&rsquo;t install PyPI packages (as when teaching a brand new Pythonistas in a locked-down corporate environment).</p>

<h2>Little niceties</h2>

<p>The first thing you&rsquo;ll notice when you launch the new REPL is the colored prompt.</p>

<p><img src="/images/new-repl-intro.gif"></p>

<p>You may also notice that as you type a block of code, after the first indented line, the next line will be auto-indented!
Additionally, hitting the Tab key inserts 4 spaces now, which means there&rsquo;s no more need to ever hit <code>Space Space Space Space</code> to indent ever again.</p>

<p>At this point you might be thinking, &ldquo;wait did I accidentally launch ptpython or some other alternate REPL?&rdquo;
But it gets even better!</p>

<h2>You can &ldquo;exit&rdquo; now</h2>

<p>Have you ever typed <code>exit</code> at the Python REPL?
If so, you&rsquo;ve seen a message like this:</p>

<pre><code class="pycon">&gt;&gt;&gt; exit
Use exit() or Ctrl-D (i.e. EOF) to exit
</code></pre>

<p>That feels a bit silly, doesn&rsquo;t it?
Well, typing <code>exit</code> will exit immediately.</p>

<p><img src="/images/new-repl-exit.gif"></p>

<p>Typing <code>help</code> also enters help mode now (previously you needed to call <code>help()</code> as a function).</p>

<h2>Block-level history</h2>

<p>The feature that will make the biggest different in my own usage of the Python REPL is block-level history.</p>

<p><img src="/images/new-repl-block.gif"></p>

<p>I make typos all the time while teaching.
I also often want to re-run a specific block of code with a couple small changes.</p>

<p>The old-style Python REPL stores history line-by-line.
So editing a block of code in the old REPL required hitting the up arrow many times, hitting Enter, hitting the up arrow many more times, hitting Enter, etc. until each line in a block was chosen.
At the same time you also needed to make sure to edit your changes along the way&hellip; or you&rsquo;ll end up re-running the same block with the same typo as before!</p>

<p>The ability to edit a previously typed <em>block</em> of code is huge for me.
For certain sections of my Python curriculum, I hop into <a href="https://github.com/prompt-toolkit/ptpython">ptpython</a> or <a href="https://github.com/ipython/ipython">IPython</a> specifically for this feature.
Now I&rsquo;ll be able to use the default Python REPL instead.</p>

<h2>Pasting code <em>just works</em></h2>

<p>The next big feature for me is the ability to paste code.</p>

<p>Check this out:</p>

<p><img src="/images/new-repl-paste.gif"></p>

<p>Not impressed?
Well, watch what happens when we paste that same block of code into the old Python REPL:</p>

<p><img src="/images/old-repl-paste.gif"></p>

<p>The old REPL treated pasted text the same as manually typed text.
When two consecutive newlines were encountered in the old REPL, it would end the current block of code because it assumed the Enter key had been pressed twice.</p>

<p>The new REPL supports <a href="https://en.wikipedia.org/wiki/Bracketed-paste">bracketed paste</a>, which is was invented in 2002 and has since been adopted by all modern terminal emulators.</p>

<h2>No Windows support? Curses!</h2>

<p>Unfortunately, this new REPL doesn&rsquo;t currently work on Windows.
This new REPL relies on the <code>curses</code> and <code>readline</code> modules, neither of which are available on Windows.
I&rsquo;m hoping that this new REPL might encourage the addition of <code>curses</code> support on Windows (there are <a href="https://github.com/python/cpython/issues/85796">multiple issues</a> discussing this).</p>

<p>The <a href="https://pym.dev/repl">in-browser Python REPL</a> on Python Morsels also won&rsquo;t be able to use the new REPL because readline and curses aren&rsquo;t available in the WebAssembly Python build.</p>

<h2>Beta test Python 3.13 to try out the new REPL üíñ</h2>

<p>Huge thanks to Pablo Galindo Salgado, ≈Åukasz Langa, and Lysandros Nikolaou <a href="https://docs.python.org/3.13/whatsnew/3.13.html">for implementing this new feature</a>!
And thanks to Michael Hudson-Doyle and Armin Rigo for implementing the original version of this REPL, which was <a href="https://github.com/pypy/pyrepl">heavily borrowed from PyPy&rsquo;s pyrepl project</a>.</p>

<p>The new Python REPL coming in 3.13 is a major improvement over the old REPL.
While the lack of Windows support is disappointing, but I&rsquo;m hopeful that a motivated Windows user will help add support eventually!</p>

<p>Want to try out this new REPL?
Download and install <a href="https://www.python.org/downloads/release/python-3130b1/">Python 3.13.0 beta 1</a>!</p>

<p>Beta testing new Python releases helps the Python core team ensure the final release of 3.13.0 is as stable and functional as possible.
If you notice a bug, <a href="https://github.com/python/cpython/issues">check the issue tracker</a> to see if it&rsquo;s been reported yet and if not report it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing a custom Python build with pyenv]]></title>
    <link href="https://treyhunner.com/2024/05/installing-a-custom-python-build-with-pyenv/"/>
    <updated>2024-05-03T21:26:23-07:00</updated>
    <id>https://treyhunner.com/2024/05/installing-a-custom-python-build-with-pyenv</id>
    <content type="html"><![CDATA[<p>I am <em>so</em> excited about the new Python REPL that will <em>likely</em> land in Python 3.13.
I&rsquo;ve been following <a href="https://github.com/python/cpython/pull/111567">this CPython pull request</a> since I heard <a href="https://github.com/pablogsal">Pablo</a> and <a href="https://lukasz.langa.pl">≈Åukasz</a> announce their work on the new Python REPL <a href="https://twitter.com/treyhunner/status/1720186574032531780">in episode 1</a> of their new <a href="https://podcasts.apple.com/us/podcast/core-py/id1712665877">core.py podcast</a>.</p>

<h2>Github notifications? ü§î</h2>

<p>That pull request was quiet for many months, but in the last couple weeks, I started seeing email notifications in my inbox about it.
I&rsquo;ve never fancied myself a competent C developer and I try to steer clear from understanding TTY magic, so I have <em>no idea</em> what most of the commits do.
But seeing activity on this pull request rejuvenated my excitement about this upcoming feature!</p>

<p>I also remember reading that the Python 3.13 feature freeze is coming up soon, so I&rsquo;ve been silently cheering for that PR to make the cut before the deadline.</p>

<p>In the last few days, I decided that I should try committing to use this new REPL locally as my default Python environment.
When I type <code>python</code> on my machine, I want to live in this new shiny REPL.
I figure this will make it easier to spot bugs that might not have been noticed yet&hellip; though honestly it&rsquo;ll mostly just allow me to try out this fancy new REPL first-hand.</p>

<h2>Installing a custom CPython build in pyenv</h2>

<p>I use pyenv to manage the many Python versions I have installed on my machine.
I wondered whether it was possible to install a custom build of CPython with pyenv.</p>

<p>Instead of going to the pyenv documentation to figure out an answer, I argued with an AI until it gave me a working answer.
I tried a few AI systems at first, but Claude seemed to give me the most promising-looking answer so it was the one I argued with for 5-10 minutes until I got a working solution.</p>

<p>First, I created this <code>~/.pyenv/plugins/python-build/share/python-build/3.13.0-pyrepl</code> file:</p>

<pre><code>prefer_openssl11
export PYTHON_BUILD_CONFIGURE_WITH_OPENSSL=1
install_package "pyrepl" "https://github.com/pablogsal/cpython/archive/pyrepl.tar.gz" standard verify_py39 ensurepip
</code></pre>

<p>Then I ran this command, which took a couple minutes:</p>

<pre><code class="bash">$ pyenv install 3.13.0-pyrepl
</code></pre>

<p>After that, <code>pyenv versions</code> showed a new <code>3.13.0-pyrepl</code> version:</p>

<pre><code class="bash">$ pyenv versions
  system
* 3.8.18 (set by /home/trey/.pyenv/version)
* 3.9.18 (set by /home/trey/.pyenv/version)
* 3.10.13 (set by /home/trey/.pyenv/version)
* 3.11.6 (set by /home/trey/.pyenv/version)
* 3.12.0 (set by /home/trey/.pyenv/version)
  3.13.0-pyrepl
</code></pre>

<p>I then added <code>3.13.0-pyrepl</code> to the top of my <code>~/.pyenv/version</code> file to make this my <em>default</em> Python:</p>

<pre><code>3.13.0-pyrepl
3.12.0
3.11.6
3.10.13
3.9.18
3.8.18
</code></pre>

<p>And it worked!
Tying <code>python</code> showed the new colorful prompt.</p>

<p>Is is a bad idea to make this not-even-beta version of CPython the default Python on my machine?
I have no idea.
Everything&rsquo;s been fine for the last 10 hours at least&hellip; ü§∑</p>

<p>If you ever need to try installing a custom CPython build with pyenv, maybe the above instructions will work.
They&rsquo;re mostly generated by a large language model that didn&rsquo;t give me a working answer until the third response&hellip; so feel free to let me know if it&rsquo;s all wrong (or all right?).</p>

<p>After this adventure, I checked my podcast feed this evening only to realize that there&rsquo;s <a href="https://mastodon.social/@ambv/112378026608575109">a new core.py episode</a> all about exactly this feature!
If you&rsquo;d like to hear some core developers nerd out about CPython development, give core.py a listen.
You don&rsquo;t need to understand how CPython development works to enjoy their enthusiasm. üíñ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10 years of Python conferences]]></title>
    <link href="https://treyhunner.com/2024/04/10-years-of-python-conferences/"/>
    <updated>2024-04-27T11:45:00-07:00</updated>
    <id>https://treyhunner.com/2024/04/10-years-of-python-conferences</id>
    <content type="html"><![CDATA[<p>10 years and 10 days ago I flew home from my very first Python conference.</p>

<p>I left a few days into the PyCon US 2014 sprints and I remember feeling a bit like summer camp was ending.
I&rsquo;d played board games, contributed to an open source project, seen tons of talks, and met a <em>ton</em> of people.</p>

<h2>My first Python conference: PyCon US 2014</h2>

<p>PyCon 2014 was the first Python conference I attended.</p>

<p>At the start of the conference I only knew a handful of San Diegans.
I left having met many more folks.
Some of the folks I met I knew from online forums, GitHub repos, or videos
I met Kenneth Love, Baptiste Mispelon, Carl Meyer, Eric Holscher in-person, among many others.
Most folks I met I had never encountered online, but I was glad to have met in person.</p>

<p>For the most part, I had no idea who anyone was, what they did with Python, or what they might be interested in talking about.
I also had no idea what most of the various non-talk activities were.
I found out about the Education Summit and hadn&rsquo;t realized that it required pre-registration.
The open spaces are one of my favorite parts of PyCon and I didn&rsquo;t even they existed until PyCon 2015.</p>

<p>I <em>did</em> stay for a couple days of the sprints and I was grateful for that.
Most of the memorable human connections I had were during the sprints.
I helped <a href="https://pyvideo.org">PyVideo</a> upgrade their code base from Python 2 to Python 3 (this was before Will and Sheila <a href="https://pyvideo.org/pages/thanks-will-and-sheila.html">stepped down as maintainers</a>).
Will guided me through the code base and seemed grateful for the help.</p>

<p>I also got the idea to write front-end JavaScript tests for Django during the sprints and eventually <a href="https://github.com/django/deps/blob/main/final/0003-javascript-tests.rst">started that process</a> after PyCon thanks to Carl Meyer&rsquo;s guidance.</p>

<h2>Attending regional conferences and DjangoCon</h2>

<p>In fall 2014, I attended Django BarCamp at the Eventbrite office.
That was my first exposure to the idea of an &ldquo;unconference&rdquo;&hellip; which I kept in mind when I spotted the open spaces board at PyCon 2015.</p>

<p>Before coming back to Montreal for <a href="https://twitter.com/treyhunner/status/585969805796212736">PyCon 2015</a>, I emailed Harry Percival to ask if he could use a teaching assistant during his tutorial on writing tests. His reply was much more enthusiastic than I expected: &ldquo;YES YES OH GOD YES THANK YOU THANK YOU THANK YOU TREY&rdquo;.
I was very honored to be able to help Harry, as my testing workflow was <em>heavily</em> inspired by many blog posts he&rsquo;d written about testing best practices in Django.</p>

<p>I coached at my first Django Girls event in 2015 in Ensenada and then my second at <a href="https://twitter.com/algosuna/status/641421944005378048">DjangoCon 2015</a> in Austin. I gave my first lightning talk at DjangoCon 2015, comparing modern JavaScript to Python. It was a lightning talk I had given at the San Diego JavaScript and <a href="https://www.sandiegopython.org">San Diego Python</a> meetups.</p>

<p>In 2016, I attended PyTennessee in Nashville. I remember attending a dinner of of about a dozen folks who spoke at the conference. I was grateful to get to chat with so many folks whose talks I&rsquo;d attended.</p>

<h2>Presenting talks and tutorials</h2>

<p>I presented my first conference tutorial at <a href="https://twitter.com/treyhunner/status/737069721292439552">PyCon 2016</a> in Portland and <a href="https://pyvideo.org/djangocon-us-2016/readability-counts.html">my first talk</a> at <a href="https://twitter.com/asendecka/status/756851845012844544">DjangoCon US 2016</a> in Philadelphia.
I had been presenting lightning talks every few months at my local Python and JavaScript meetups for a few years by then and I had hosted free workshops at my local meetup and paid workshops for training clients.</p>

<p>Having presented locally helped, but presenting on a big stage is always scary.</p>

<h2>Volunteering</h2>

<p>I volunteered at some of my first few conferences and found that I really enjoyed it.
I especially enjoyed running the registration desk, as you&rsquo;re often the first helpful face that people see coming into the conference.</p>

<p>During PyCon 2016, 2017, and 2018, I co-chaired the open spaces thanks to Anna Ossowski inviting me to help.
I had first attended open spaces during PyCon 2015 and I <em>loved</em> them.
Talks are great, but so are discussions!</p>

<p>I also ran for the PSF board of directors in 2016 and ended up serving on the board for a few years before stepping down.
After my board terms, I volunteered for the PSF Code of Conduct working group for about 6 years.
I didn&rsquo;t even know what the PSF <em>was</em> until PyCon 2015!</p>

<h2>A <em>lot</em> of travel&hellip; maybe too much</h2>

<p>After DjangoCon 2016, I went a bit conference-wild.
I attended <a href="https://twitter.com/treyhunner/status/829412120370565120">PyTennessee 2017</a>, <a href="https://twitter.com/PythonChat/status/845052805375295488">PyCaribbean 2017</a> in Puerto Rico, <a href="https://twitter.com/loooorenanicole/status/866382369619562496">PyCon US 2017</a> in Portland, <a href="https://twitter.com/asteracode/status/893274761727361024">PyCon Australia 2017</a> in Melbourne, <a href="https://twitter.com/TobiasMcNulty/status/896570680933703681">DjangoCon 2017</a> in Spokane, <a href="https://twitter.com/treyhunner/status/916890505157468160">PyGotham 2017</a> in NYC, and <a href="https://twitter.com/treyhunner/status/937441419966296064">North Bay Python 2017</a> in Petaluma.</p>

<p>In 2018 I sponsored <a href="https://twitter.com/treyhunner/status/962862235734495232">PyTennessee</a> and <a href="https://twitter.com/jmwatt3/status/1023713820752183296">PyOhio</a> and spoke at both.
I passed out chocolate chip cookies at PyTennessee as a way to announce the launch of <a href="https://www.pythonmorsels.com">Python Morsels</a>.
I also attended <a href="https://twitter.com/treyhunner/status/996881842820272128">PyCon 2018</a> in Cleveland, <a href="https://www.flickr.com/photos/144080672@N05/31764542868/">DjangoCon 2018</a> in San Diego, <a href="https://twitter.com/treyhunner/status/1048340952451047425">PyGotham 2018</a>, and <a href="https://twitter.com/nnja/status/1058589935618318336">North Bay Python 2018</a>.</p>

<p>I slowed down <em>a bit</em> in 2019, with just <a href="https://twitter.com/LaylaSells_cshs/status/1100058649227972609">PyCascades</a> (Seattle), <a href="https://twitter.com/mariatta/status/1125534406851084288">PyCon US</a> (Cleveland), <a href="https://twitter.com/juliansequeira/status/1157106403598749698">PyCon Australia</a> (Sydney), and DjangoCon US (San Diego, which is home for me).</p>

<h2>Since the pandemic</h2>

<p>Since the start of the pandemic, I&rsquo;ve attended <a href="https://twitter.com/treyhunner/status/1519724687890128899">PyCon US 2022</a>, DjangoCon 2022 in San Diego (in my city for the <em>third</em> time!) and <a href="https://mastodon.social/@treyhunner/110243968672457367">PyCon US 2023</a>.
Traveling is more challenging for me than it used to be, but I hope to attend more regional conferences again soon.</p>

<p>Between client work, I&rsquo;ve been focusing less on conferences and more on blog posts (<a href="https://www.pythonmorsels.com/articles/">over here</a>), <a href="https://www.youtube.com/@PythonMorsels">screencasts</a>, my <a href="https://www.pythonmorsels.com/newsletter/">weekly Python tips</a> emails, and (of course) on <a href="https://www.pythonmorsels.com">Python Morsels</a>.</p>

<h2>My journey started locally</h2>

<p>I became part of the Python community before I knew I was part of it.</p>

<p>I started using Python professionally in December 2009 and I attended my first San Diego Python meetup in March 2012.
I met the organizers, gave some lightning talks, attended Saturday study group sessions (thanks Carol Willing, Alain Domissy, and others for running these), and volunteered to help organize meetups, study groups, and workshops.</p>

<p>By 2014, I had learned from folks online and in-person and I had helped out at my local Python meetup.
I had even made a few contributions to some small Django packages I relied on heavily.</p>

<p>I was encouraged to attend PyCon 2014 by others who were attending (thanks Carol, Micah, and Paul among others).
The conference was well-worth the occasional feeling of overwhelm.</p>

<h2>We&rsquo;re all just people</h2>

<p>The biggest thing I&rsquo;ve repeatedly learned over the past decade of Python conferences is that we&rsquo;re all just people.</p>

<p>Carol Willing keynoted PyCon US 2023.
But I met Carol as a kind Python user in San Diego who started the first Python study group meetings in Pangea Bakery on Convoy Street.</p>

<p>Jay Miller will be keynoting PyCon US 2024.
But I met Jay as an attendee of the Python study group, who was enthusiastic about both learning and teaching others.</p>

<p>My partner, Melanie Arbor, keynoted DjangoCon 2022 along with Jay Miller.
When I met Melanie, she was new to Python and was very eager to both learn and help others.</p>

<p>David Lord has made a huge impact on the maintenance of Flask and other Pallets projects.
I met David as a Python study group attendee who was an enthusiastic StackOverflow contributor.</p>

<p>I learned a ton from Brandon Rhodes, Ned Batchelder, Russell Keith-Magee, and many others from online videos, forums, and open source projects before I ever met them.
But each of them are also just Python-loving people like the rest of us.
Russell gives good hugs, Ned is an organizer of his local Python meetup, and Brandon wears the same brand of shoes as me.</p>

<p>We all have people we&rsquo;ve learned from, we suffer from feelings of inadequacy, we get grumpy sometimes, and we care about the Python language and community in big and small ways.</p>

<h2>What&rsquo;s next for you?</h2>

<p>Will you attend a local meetup?
Or will you attend an online social event?</p>

<p>If so, consider asking the organize if you can present a 5 minute lightning talk at a future event.
As I <a href="https://youtu.be/aNHBr7q-KVw?si=Fryj6Ez4Cw7q-RAq">noted in a DjangoCon 2016 lightning talk</a>, lightning talks are a great way to connect with folks.</p>

<p>Will you attend a Python conference one day?
See <a href="https://treyhunner.com/2018/04/how-to-make-the-most-of-your-first-pycon/">having a great first PyCon</a> when/if you do.</p>

<p>Remember that we&rsquo;re all just people though.
Some may have a bit more experience (whether at speaking, contributing to open source, or something else), but we&rsquo;re just people.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Black Friday &amp; Cyber Monday sales (2023)]]></title>
    <link href="https://treyhunner.com/2023/11/python-black-friday-and-cyber-monday-sales-2023/"/>
    <updated>2023-11-20T08:00:00-08:00</updated>
    <id>https://treyhunner.com/2023/11/python-black-friday-and-cyber-monday-sales-2023</id>
    <content type="html"><![CDATA[<p>It&rsquo;s time for my annual compilation post of <strong>Python learning deals</strong>.
I&rsquo;ve been compiling Python-related Black Friday &amp; Cyber Monday sales <a href="https://treyhunner.com/blog/categories/sales/">since 2018</a> and 2023&rsquo;s Python-related sales are coming up.</p>

<h2>Lifetime Python Morsels access for the price of two years</h2>

<p>I&rsquo;m kicking things off with <a href="https://www.pythonmorsels.com/lifetime-access-sale/">my sale</a> on Python Morsels.
Python Morsels helps developers <strong>deepen their Python skills</strong> in a way that day-to-day coding simply can&rsquo;t.</p>

<p>Python Morsels is designed for:</p>

<ul>
<li>experienced developers frustrated with gaps in their Python knowledge</li>
<li>self-taught programmers seeking courage and confidence in their Python abilities</li>
<li>experienced Python developers hoping to dive even deeper</li>
</ul>


<p>If you saw yourself in that list and you plan to use Python heavily for at least a few more years, I highly recommend checking out <a href="https://www.pythonmorsels.com/lifetime-access-sale/">the Python Morsels sale</a>.</p>

<p>From now through November 27, you can get <strong>lifetime access</strong> to Python Morsels for a one-time fee.
Python Morsels usually costs <strong>$240/year</strong> but lifetime access is <strong>only $480</strong>.
This is the best sale I&rsquo;ve ever offered on Python Morsels and I&rsquo;m guessing this might be the best Python-related deal this year.</p>

<p><a href="https://pythonmorsels.com/lifetime-access-sale/" class="subscribe-btn form-big">üí∞ See the Python Morsels sale</a></p>

<h2>On sale now</h2>

<p>Here are Python-related sales that are live right now:</p>

<ul>
<li><strong><a href="https://www.pythonmorsels.com/lifetime-access-sale/">Python Morsels</a></strong>: lifetime access to my Python skill-building platform for the price of 2 years</li>
<li><strong><a href="https://learning.oreilly.com/signup/?promotion_code=CYBERWEEK23">O'Reilly Media</a></strong>: the first year is $200 off with the coupon <code>CYBERWEEK23</code> ($299 instead of $499)</li>
<li><strong><a href="http://talkpython.fm/black-friday">Talk Python</a></strong>: 50% off 5 of their courses</li>
<li><strong><a href="https://courses.dataschool.io/black-friday">Data School</a></strong>: 40% off all Kevin Markham&rsquo;s courses</li>
<li><strong><a href="https://courses.pythontest.com/p/complete-pytest-course?code=BLACKFRIDAY">Brian Okken</a></strong>: 50% off pytest course and community access with coupon code <code>BLACKFRIDAY</code> (ends Nov 30)</li>
<li><strong><a href="https://lernerpython.com/bfcm-2023/">Reuven Lerner</a></strong>: 40% off Reuven&rsquo;s courses and 25% off a new membership he&rsquo;s launching</li>
<li><strong><a href="https://www.linkedin.com/feed/update/urn:li:activity:7133217889460883456/">Matt Harrison</a></strong>: 20% off Matt&rsquo;s corporate training</li>
<li><strong><a href="https://learnbyexample.gumroad.com">Sundeep Agarwal</a></strong>: around 70% off Sundeep&rsquo;s <a href="https://learnbyexample.gumroad.com/l/all-books/FestiveOffer">all book</a> and <a href="https://learnbyexample.gumroad.com/l/python-bundle/FestiveOffer">Python</a> and his <a href="https://learnbyexample.gumroad.com/l/py_regex/FestiveOffer">regex</a> book is free</li>
<li><strong><a href="https://www.blog.pythonlibrary.org">Mike Driscoll</a></strong>: 33% off Mike&rsquo;s Python <a href="https://driscollis.gumroad.com/">books</a> and <a href="https://www.teachmepython.com/">courses</a> with code <code>black2023</code></li>
<li><strong><a href="https://thepythoncodingplace.com/membership/">Stephen Gruppetta</a></strong>: 70% off pre-sale on his new Python membership ($95 instead of $395)</li>
<li><strong><a href="https://mathspp.gumroad.com/">Rodrigo</a></strong>: 40% discount on Rodrigo&rsquo;s upcoming <a href="https://mathspp.gumroad.com/l/pythonbootcamp?code=bootcampbf23">bootcamp</a> and on his <a href="https://mathspp.gumroad.com/l/comprehending-comprehensions?code=presale">comprehensions course</a></li>
<li><strong><a href="https://nostarch.com/catalog/python">No Starch</a></strong>: 35% off with code <code>DEALS4DAYS</code> (Crash Course, Automate The Boring Stuff, etc.)</li>
<li><strong><a href="https://pragprog.com/">Pragmatic Bookshelf</a></strong>: 40% off <a href="https://pragprog.com/titles/bopytest2/python-testing-with-pytest-second-edition/">the pytest book</a> and all other books with code <code>turkeycode2023</code></li>
<li><strong><a href="https://www.manning.com/catalog#section-50">Manning</a></strong> 50% off eBooks, 40% off print books</li>
<li><strong><a href="https://udemy.com">Udemy</a></strong>: various <a href="https://www.udemy.com/topic/python/">Python courses</a> are on sale right now</li>
</ul>


<p>If you know of another sale (or a likely sale) <strong>please comment below</strong>.</p>

<h2>Django sales</h2>

<p>Adam Johnson is also compiling many <strong>Django-related Black Friday and Cyber Monday sales</strong> via a <a href="https://adamj.eu/tech/2023/11/20/django-black-friday-deals-2023/">Django sales post</a>.</p>

<h2>More developer-oriented deals</h2>

<p>For even more Black Friday deals for software developers, see <a href="https://blackfridaydeals.dev">BlackFridayDeals.dev</a>, which I believe launched this year.</p>

<h2>Go get yourself some deals!</h2>

<p>Go hop on those sales! (But make sure to put an event in your calendar to actually use what you purchase. üòâ)
And if you have questions about the <a href="https://www.pythonmorsels.com/lifetime-access-sale/"><strong>Python Morsels Cyber Monday sale</strong></a> please comment below or <a href="mailto:he&amp;#108;p&amp;#64;&amp;#112;%7&amp;#57;th%6Fnmo&amp;#114;s%6&amp;#53;ls&amp;#46;&amp;#99;&amp;#111;m">email me</a>.</p>

<p>Happy Python-ing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Morsels Cyber Monday sale]]></title>
    <link href="https://treyhunner.com/2022/11/python-morsels-cyber-monday-sale/"/>
    <updated>2022-11-25T08:30:00-08:00</updated>
    <id>https://treyhunner.com/2022/11/python-morsels-cyber-monday-sale</id>
    <content type="html"><![CDATA[<p>Python Morsels helps Python users <strong>sharpen their Python skills</strong> in a way that writing production code doesn&rsquo;t. If you are:</p>

<ul>
<li>an experienced developer, frustrated with <strong>gaps in your Python knowledge</strong></li>
<li>a self-taught programmer seeking <strong>courage and confidence</strong> in your Python abilities</li>
<li>or an intermediate-level Python learner trying to <strong>deepen your Python skills</strong></li>
</ul>


<p>&hellip;a weekly Python Morsels habit can help you make <strong>consistent progress</strong> and <strong>noticeable growth</strong> in <strong>just a few months</strong>.</p>

<p>Python Morsels is <strong>on sale</strong> through Cyber Monday. <a href="https://www.pythonmorsels.com/all-python-exercises-and-screencasts/">Subscribe</a> now to <strong><a href="https://www.pythonmorsels.com/pricing/">save up to $108 per year</a></strong>.</p>

<h2>Day-to-day coding isn&rsquo;t purposeful learning</h2>

<p>If you write Python frequently, you likely learn new things all the time.
The learning you get from day-to-day coding is messy and unpredictable. Yes, learning happens, but gradually.</p>

<p>What if you could <strong>learn something unexpected about Python</strong> in <strong>just 30 minutes</strong> a week?</p>

<p>That&rsquo;s what Python Morsels is designed to do: push you <em>just</em> outside your comfort zone to <strong>discover something new</strong> without requiring a big time sink.</p>

<blockquote><p>The time I spent working on Python Morsels problems translates into saved time programming for work. And it&rsquo;s not a grind - it&rsquo;s actually fun. I&rsquo;ve learned advanced Python concepts that I would have never had the opportunity to use in my day to day work.
<br><span style="float: right;">
‚Äî Eric Pederson, <a href="https://www.pythonmorsels.com/testimonials/#tag:short_on_time">Python Morsels user</a></span>
<br></p></blockquote>

<div class="clearfix"></div>


<h2>Guided Python practice every single week</h2>

<p>Python Morsels is <strong>quite different</strong> from many other Python learning systems: you tell me your Python skill level (from <strong>novice</strong> to <strong>advanced</strong>) and I send you small tasks to help you sharpen your Python skills.</p>

<p>Every Monday, you&rsquo;ll receive an email from me with:</p>

<ul>
<li>a short screencast to watch (or read)</li>
<li>a multi-part exercise to move you outside your comfort zone (often achievable in 30 minutes)</li>
<li>a mini exercise that you can accomplish in just 10 minutes</li>
<li>links to dive deeper into subsequent screencasts and exercises</li>
</ul>


<p>If you&rsquo;d like to nudge your learning in a specific direction, you can always work through a topic-specific exercise path, or watch one of my many screencast series.</p>

<h2>Does this actually work?</h2>

<p>If you use Python Morsels even semi-regularly, I‚Äôm confident your Python skills will improve.</p>

<p>Here&rsquo;s what Python Morsels users have to say:</p>

<blockquote><p>I was hesitant about paying for Python Morsels given how many free learning resources there are. But it was definitely worth it. I&rsquo;ve learnt more from Python Morsels than anything else, by far.
<br><span style="float: right;">
‚Äî Cosmo Grant</span>
<br></p></blockquote>

<div class="clearfix"></div>


<blockquote><p>During my study of Python, I used various programming challenge sites. I can say for sure that this is the best challenge site I have ever come across.
<br><span style="float: right;">
‚Äî Bartosz Chojnacki</span>
<br></p></blockquote>

<div class="clearfix"></div>


<p>Not sure? <a href="https://www.pythonmorsels.com/testimonials/">Read more from Python Morsels users here</a>.</p>

<h2>Lock-in your $200/year subscription</h2>

<p>Python Morsels currently includes <strong>over 150 screencasts and articles</strong> and <strong>nearly 200 exercises</strong>, each of which links to over a dozen helpful resources.</p>

<p>Subscribe before November 29, 2022 to lock-in your subscription at $200/year.</p>

<p><a href="https://www.pythonmorsels.com/pricing" class="subscribe-btn form-big">Subscribe to Python Morsels üí∞</a></p>
]]></content>
  </entry>
  
</feed>
