<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: css | Trey Hunner]]></title>
  <link href="https://treyhunner.com/blog/categories/css/atom.xml" rel="self"/>
  <link href="https://treyhunner.com/"/>
  <updated>2024-10-03T13:28:33-07:00</updated>
  <id>https://treyhunner.com/</id>
  <author>
    <name><![CDATA[Trey Hunner]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating a custom Bootstrap build]]></title>
    <link href="https://treyhunner.com/2015/02/creating-a-custom-bootstrap-build/"/>
    <updated>2015-02-25T16:20:00-08:00</updated>
    <id>https://treyhunner.com/2015/02/creating-a-custom-bootstrap-build</id>
    <content type="html"><![CDATA[<p>Have you ever tried to customize the font size for your <a href="http://getbootstrap.com/">Bootstrap</a>-powered website?</p>

<p>It&rsquo;s not something you can easily do without recompiling Bootstrap&rsquo;s CSS. If you change the font size on your page, you&rsquo;ll want that change to cascade through.  A change in the base font size should recalculate header font sizes and margins/padding for text elements like paragraph tags.</p>

<p>Let&rsquo;s look at how to create a custom <a href="https://github.com/twbs/bootstrap-sass">Bootstrap SASS</a> build without maintaining our own fork of Bootstrap.</p>

<h2>Using Bootstrap with Bower</h2>

<p>We&rsquo;re going to use <code>bower</code> and <code>gulp</code> to compile Bootstrap, so we&rsquo;ll need <a href="http://nodejs.org/">Node.js</a>.</p>

<p>First let&rsquo;s make a <code>package.json</code> file for Node to see.  Either use <code>npm init -y</code> or create a <code>package.json</code> file containing just an empty JSON object (<code>{}</code>).</p>

<p>Now let&rsquo;s install <code>gulp</code>, <code>gulp-bower</code>, and <code>gulp-sass</code>:</p>

<pre><code>$ npm install --save-dev gulp gulp-bower gulp-sass
</code></pre>

<p>Our <code>package.json</code> file should now look something like this:</p>

<p>{% codeblock lang:json package.json %}
{
  &ldquo;devDependencies&rdquo;: {
    &ldquo;gulp&rdquo;: &ldquo;^3.8.11&rdquo;,
    &ldquo;gulp-bower&rdquo;: &ldquo;0.0.10&rdquo;,
    &ldquo;gulp-sass&rdquo;: &ldquo;^1.3.3&rdquo;
  }
}
{% endcodeblock %}</p>

<p>Now let&rsquo;s use Bower to install bootstrap.  This will allow us to import Bootstrap into our SCSS code and compile it down to CSS manually.</p>

<p>Create a <code>bower.json</code> file using <code>bower init</code> or by manually creating one:</p>

<p>{% codeblock lang:json bower.json %}
{
  &ldquo;name&rdquo;: &ldquo;custom-bootstrap-example&rdquo;,
  &ldquo;authors&rdquo;: [
    &ldquo;Lillian Langston <a href="&#109;&#97;&#105;&#x6c;&#116;&#x6f;&#58;&#x6c;&#105;&#x6c;&#108;&#105;&#x61;&#110;&#64;&#101;&#120;&#97;&#x6d;&#x70;&#108;&#101;&#x2e;&#99;&#x6f;&#109;">&#x6c;&#105;&#x6c;&#108;&#105;&#x61;&#110;&#x40;&#101;&#120;&#97;&#x6d;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#109;</a>&rdquo;
  ],
  &ldquo;private&rdquo;: true,
  &ldquo;ignore&rdquo;: [
    &ldquo;<em>*/.</em>&rdquo;,
    &ldquo;node_modules&rdquo;,
    &ldquo;bower_components&rdquo;,
    &ldquo;test&rdquo;,
    &ldquo;tests&rdquo;
  ],
  &ldquo;dependencies&rdquo;: {
  }
}
{% endcodeblock %}</p>

<p>Now let&rsquo;s install <code>bootstrap-sass</code> with Bower.</p>

<p>{% codeblock lang:bash %}
$ bower install &ndash;save bootstrap-sass
{% endcodeblock %}</p>

<p>Our <code>bower.json</code> file should now have <code>bootstrap-sass</code> listed as a dependency:</p>

<p>{% codeblock %}
&ldquo;dependencies&rdquo;: {
  &ldquo;bootstrap-sass&rdquo;: &ldquo;~3.3.3&rdquo;
}
{% endcodeblock %}</p>

<p>Now we can make an SCSS file that includes bootstrap into our project.  Let&rsquo;s call our SCSS file <code>css/app.scss</code>:</p>

<p>{% codeblock lang:scss css/app.scss %}
@import &ldquo;bootstrap&rdquo;;
@import &ldquo;bootstrap/theme&rdquo;;
{% endcodeblock %}</p>

<p>Now let&rsquo;s use gulp to compile our <code>app.scss</code> which includes Bootstrap SASS:</p>

<p>{% codeblock lang:js gulpfile.js %}</p>

<p>var gulp = require(&lsquo;gulp&rsquo;);
var sass = require(&lsquo;gulp-sass&rsquo;);</p>

<p>var config = {
    bootstrapDir: &lsquo;./bower_components/bootstrap-sass&rsquo;,
    publicDir: &lsquo;./public&rsquo;,
};</p>

<p>gulp.task(&lsquo;css&rsquo;, function() {
    return gulp.src(&lsquo;./css/app.scss&rsquo;)
    .pipe(sass({
        includePaths: [config.bootstrapDir + &lsquo;/assets/stylesheets&rsquo;],
    }))
    .pipe(gulp.dest(config.publicDir + &lsquo;/css&rsquo;));
});</p>

<p>gulp.task(&lsquo;fonts&rsquo;, function() {
    return gulp.src(config.bootstrapDir + &lsquo;/assets/fonts/<em>*/</em>&rsquo;)
    .pipe(gulp.dest(config.publicDir + &lsquo;/fonts&rsquo;));
});</p>

<p>gulp.task(&lsquo;default&rsquo;, [&lsquo;css&rsquo;, &lsquo;fonts&rsquo;]);</p>

<p>{% endcodeblock %}</p>

<p>Now when we run <code>gulp</code>, our compiled Bootstrap CSS should appear in the <code>public/css</code> directory:</p>

<p>{% codeblock lang:bash %}
$ gulp
$ ls public/css
app.css
{% endcodeblock %}</p>

<h2>Customizing the font size</h2>

<p>Now let&rsquo;s look at how we can go about customizing the font size in Bootstrap.</p>

<p>Notice that the value of the <code>$font-size-base</code> variable in the <a href="https://github.com/twbs/bootstrap-sass/blob/master/assets/stylesheets/bootstrap/_variables.scss#L52"><code>_variables.scss</code> file</a> is used for calculating a variety of other important variables.  For example 8 of the lines below rely on <code>$font-size-base</code>:</p>

<p>{% codeblock lang:scss %}
$font-size-base:          14px !default;
$font-size-large:         ceil(($font-size-base * 1.25)) !default; // ~18px
$font-size-small:         ceil(($font-size-base * 0.85)) !default; // ~12px</p>

<p>$font-size-h1:            floor(($font-size-base * 2.6)) !default; // ~36px
$font-size-h2:            floor(($font-size-base * 2.15)) !default; // ~30px
$font-size-h3:            ceil(($font-size-base * 1.7)) !default; // ~24px
$font-size-h4:            ceil(($font-size-base * 1.25)) !default; // ~18px
$font-size-h5:            $font-size-base !default;
$font-size-h6:            ceil(($font-size-base * 0.85)) !default; // ~12px
{% endcodeblock %}</p>

<p>Notice those <code>!default</code> flags?  That <code>!default</code> flag means the variables will be set <em>only</em> if they don&rsquo;t have a value already.</p>

<p>All of the variables assigned in <a href="https://github.com/twbs/bootstrap-sass">Bootstrap SASS&rsquo;s</a> <code>_variables.scss</code> file have a <code>!default</code> flag.  That means we can override those variables by assigning our own values before we import Bootstrap.</p>

<p>Let&rsquo;s copy Bootstrap&rsquo;s <code>_variables.scss</code> file and make our own custom version:</p>

<p>{% codeblock lang:bash %}
$ cp bower_components/bootstrap-sass/assets/stylesheets/bootstrap/<em>variables.scss css/</em>variables.scss
{% endcodeblock %}</p>

<p>Now we need to reference our custom variables module from our <code>app.scss</code> file.</p>

<p>{% codeblock lang:scss %}
@import &ldquo;variables&rdquo;;
@import &ldquo;bootstrap&rdquo;;
@import &ldquo;bootstrap/theme&rdquo;;
{% endcodeblock %}</p>

<p>Remember to import our <code>variables</code> module <em>before</em> we import Bootstrap!  If we import it afterward, our changes customizations won&rsquo;t be applied.</p>

<p>Now let&rsquo;s change <code>$font-size-base</code> to <code>16px</code> in <code>css/_variables.scss</code>:</p>

<p>{% codeblock lang:scss %}
$font-size-base:          16px;
{% endcodeblock %}</p>

<p>Now if we recompile our CSS we should see our larger font size reflected throughout our application:</p>

<p>{% codeblock lang:bash %}
$ gulp
{% endcodeblock %}</p>

<h2>Try it out!</h2>

<p>I made a sample project to demonstrate how easy it is to customize Bootstrap variables before building <a href="https://github.com/twbs/bootstrap-sass">Bootstrap SASS</a>.</p>

<p><a href="https://github.com/treyhunner/custom-bootstrap-example">Check out the sample project on Github</a></p>

<p>Know about a different way to customize Bootstrap?  Did I make a mistake in my explanation?  Leave a comment and let me know.</p>
]]></content>
  </entry>
  
</feed>
